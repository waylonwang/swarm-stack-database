version: "3.4"

services:
  # Mariadb 10
  mariadb:
    image: mariadb:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      TZ: ${TZ}
    volumes:
      - nfs_mariadb_data:/var/lib/mysql
      - nfs_mariadb_conf:/etc/mysql/conf.d
      - nfs_mariadb_log:/var/log/mysql
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.mariadb.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.mariadb.entrypoints=mariadb"
        - "traefik.tcp.routers.mariadb.service=mariadb"
        - "traefik.tcp.services.mariadb.loadbalancer.server.port=3306"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.database == true

  # Phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      PMA_ARBITRARY: ${PMA_ARBITRARY}
      PMA_HOSTS: ${PMA_HOSTS}
      PMA_VERBOSES: ${PMA_VERBOSES}
      PMA_PORTS: ${PMA_PORTS}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      TZ: ${TZ}
    volumes:
      - nfs_phpmyadmin:/var/www/html/themes/mytheme
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.phpmyadmin.rule=Host(`mysqladmin.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
        - "traefik.http.routers.phpmyadmin.service=phpmyadmin"
        - "traefik.http.routers.phpmyadmin.middlewares=noauth-chain@file"
        - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.database == true

  # Postgres
  postgres:
    image: postgres:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGDATA: ${PGDATA}
      TZ: ${TZ}
    volumes:
      - nfs_postgres:${PGDATA}
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.postgres.entrypoints=postgres"
        - "traefik.tcp.routers.postgres.service=postgres"
        - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.database == true

  # Pgadmin
  pgadmin:
    image: dpage/pgadmin4:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: ${TZ}
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.pgadmin.entrypoints=websecure"
        - "traefik.http.routers.pgadmin.service=pgadmin"
        - "traefik.http.routers.pgadmin.middlewares=noauth-chain@file"
        - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.database == true

networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_mariadb_data:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/database/mysql/mariadb10/data
  nfs_mariadb_conf:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/database/mysql/mariadb10/conf
  nfs_mariadb_log:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/database/mysql/mariadb10/log
  nfs_phpmyadmin:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/database/phpmyadmin/theme
  nfs_postgres:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/database/postgres/data
